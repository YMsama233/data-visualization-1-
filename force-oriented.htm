<html>
    <body>
        <script src="d3.min.js" charset=“utf-8”></script>
        <div style="text-align:center;">
            <span>
                <h1>大学生的生活满意度状况</h1>
            </span>
        </div>
        <script>
            var color=d3.schemeCategory10;
            var w=window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
            var h=window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;

            var width=w*0.95;
            var height=h*0.9;

            //创建一个弧生成器
            var forceSimulation = d3.forceSimulation()
                               .force("center",d3.forceCenter(width/2,height/2)) //中心点
                               .force("charge",d3.forceManyBody().strength(-250))
                               .force("link",d3.forceLink().distance(100));									
							
            var svg = d3.select("body")
                    .append("svg")
                    .attr("width",width)
                    .attr("height",height);
            
            d3.json("a.json",function(error, graph){
                
                console.log(error);

                forceSimulation.nodes(graph.nodes)
                            .on("tick");
            
            forceSimulation.force("link")
                            .links(graph.links);
                            
            var link=svg.selectAll(".link")
                        .data(graph.links)
                        .join("line")
                        .attr("class","link")
                        .style("stroke-width",2)
                        .style("stroke",d=>d.color)
                        .style("opacity",0.6);
            console.log(link);

            var node=svg.selectAll(".node")
                        .data(graph.nodes)
                        .join("circle")
                        .attr("r",16)
                        .style("fill",(d,i)=>color[i%10])
                        .call(drag()); 
            console.log(node);        

            forceSimulation.on("tick",()=>{
                link.attr("x1",d=>d.source.x)
                    .attr("y1",d=>d.source.y)
                    .attr("x2",d=>d.target.x)
                    .attr("y2",d=>d.target.y);
                node.attr("cx",d=>d.x)
                    .attr("cy",d=>d.y);
                edges_text.attr("x",d=>(d.source.x + d.target.x) / 2 )
                            .attr("y",d=>(d.source.y + d.target.y) / 2 );
                texts.attr("x",d=>d.x)
                        .attr("y",d=>d.y);
            })

            var edges_text = svg.selectAll(".linetext")
                            .data(graph.links)
                            .join("text")
                            .attr("class","linetext")
                            .text(d=>d.value)
                            .attr("fill",d=>d.color)
                            .style("stroke","black")
                            .style("stroke-width",0.2)
                            .style("font-size",14);	     

            var texts=svg.selectAll(".forceText")
                        .data(graph.nodes)
                        .join("text")
                        .attr("class","forceText")
                        .style("stroke",(d,i)=>color[i%10])
                        .style("font-size","15px")
                        .attr("text-anchor","middle")
                        .attr("dy",30)
                        .text(d=>d.name);

            function drag()
            {
                function dragstarted(event,d){
                    if(!event.active)   forceSimulation.alphaTarget(0.3).restart();
                    d.fx=d.x;
                    d.fy=d.y;
                }
                function dragged(event,d){
                    d.fx=event.x;
                    d.fy=event.y;
                }
                function dragended(event,d){
                    if(!event.active)   forceSimulation.alphaTarget(0);
                    d.fx=null;
                    d.fy=null;
                }
                return d3.drag()
                            .on("start",dragstarted)
                            .on("drag",dragged)
                            .on("end",dragended);
            }
            })
            
        </script>
    </body>
</html>
